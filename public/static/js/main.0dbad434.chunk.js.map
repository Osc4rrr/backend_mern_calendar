{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/UseForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/ui/DeleteEventFab.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducers.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","name","email","password","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","id","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","value","LoginScreen","useDispatch","lEmail","lpassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","preventDefault","a","respuesta","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","resp","Navbar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","DeleteEventFab","getState","calendar","activeEvent","console","log","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","endDate","clone","initEvent","notes","CalendarModal","modalOpen","ui","dateStart","setDateStart","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","inititalState","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0dbad434.chunk.js","sourcesContent":["\r\nconst baseUrl = process.env.REACT_APP_API_URL; \r\n\r\nconst fetchSinToken = (endpoint, data, method='GET') => {\r\n    \r\n    const url = `${baseUrl}/${endpoint}`;  \r\n\r\n    if(method==='GET'){\r\n        return fetch(url); \r\n    }else{\r\n\r\n        const {name, email, password} = data; \r\n        return fetch(url, {\r\n            method, \r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            }, \r\n            body: JSON.stringify({\r\n                name, \r\n                email, \r\n                password\r\n            })\r\n        }); \r\n    }\r\n\r\n}\r\n\r\nconst fetchConToken = (endpoint, data, method='GET') => {\r\n    \r\n    const url = `${baseUrl}/${endpoint}`;  \r\n\r\n    const token = localStorage.getItem('token') || ''; \r\n\r\n    if(method==='GET'){\r\n        return fetch(url, {\r\n            method, \r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        }); \r\n    }else{\r\n        return fetch(url, {\r\n            method, \r\n            headers:{\r\n                'Content-type': 'application/json', \r\n                'x-token': token\r\n            }, \r\n            body: JSON.stringify(data)\r\n        }); \r\n    }\r\n\r\n}\r\n\r\n\r\nexport {\r\n    fetchSinToken, \r\n    fetchConToken\r\n}","export const types = {\r\n    \r\n    uiOpenModal: '[ui] Open Modal', \r\n    uiCloseModal: '[ui] Close Modal', \r\n\r\n    eventSetActive: '[event] Set Active',\r\n    eventLogout:'[event] Logout event',\r\n    eventStartAddNew: '[event] Start Add New',\r\n    eventAddNew: '[event] Add new', \r\n    eventClearActiveEvent: '[event] Clear Active Event', \r\n    eventUpdated: '[event] Event Updated', \r\n    eventDeleted: '[event] Event Deleted',\r\n    \r\n    eventLoaded: '[event] Events Loaded',\r\n    \r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login', \r\n\r\n    authStartRegister: '[auth] Start Register', \r\n    authStartTokenRenew: '[auth] Star token renew',\r\n    authLogout: '[auth] Star Logout'\r\n}","import moment from 'moment'; \r\n\r\nexport const prepareEvents = (events = []) => {\r\n\r\n    return events.map(\r\n        (e) => ({\r\n            ...e, \r\n            end: moment(e.end).toDate(),\r\n            start: moment(e.start).toDate(),\r\n        })\r\n    )\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const eventStartAddNew = (event) => {\r\n\r\n    return async(dispatch, getState) => {\r\n\r\n        const {uid,name} = getState().auth; \r\n\r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST'); \r\n            const body = await resp.json(); \r\n\r\n            if(body.ok){\r\n                event.id = body.evento.id; \r\n                event.user = {\r\n                    _id: uid, \r\n                    name\r\n                }\r\n                dispatch(eventAddNew(event)); \r\n            }\r\n        } catch (error) {\r\n            console.log(error); \r\n\r\n        }\r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew, \r\n    payload: event\r\n}); \r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive, \r\n    payload: event\r\n}); \r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n}); \r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async (dispatch) => {\r\n        \r\n        try {\r\n            const resp = await fetchConToken(`events/${event.id}`, event, 'PUT')\r\n            const body = await resp.json(); \r\n\r\n            if(body.ok){\r\n                dispatch(eventUpdated(event)); \r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated, \r\n    payload: event\r\n}); \r\n\r\nexport const eventStartDelete = () => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const {id} = getState().calendar.activeEvent;\r\n        \r\n        try {\r\n            const resp = await fetchConToken(`events/${id}`,{}, 'DELETE')\r\n            const body = await resp.json();\r\n\r\n\r\n            if(body.ok){\r\n                dispatch(eventDeleted(id)); \r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = (id) => ({type: types.eventDeleted, payload:id})\r\n\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken('events'); \r\n            const body = await resp.json(); \r\n            const events = prepareEvents(body.eventos); \r\n\r\n            dispatch(eventLoaded(events));\r\n        } catch (error) {\r\n            console.log(error); \r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded, \r\n    payload: events\r\n})\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n})","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n        const respuesta = await fetchSinToken('auth', {email, password}, 'POST'); \r\n        const body = await respuesta.json(); \r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid, \r\n                name: body.name\r\n            }))\r\n        }else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async(dispatch) => {\r\n\r\n        \r\n        const resp = await fetchSinToken('auth/new', {email, name, password}, 'POST'); \r\n        const body = await resp.json(); \r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid, \r\n                name: body.name\r\n            }))\r\n        }else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n        \r\n\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n                \r\n        const resp = await fetchConToken('auth/renew'); \r\n        const body = await resp.json(); \r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid, \r\n                name: body.name\r\n            }))\r\n        }else{\r\n            dispatch(checkingFinish()); \r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinish\r\n}); \r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin, \r\n    payload: user\r\n}); \r\n\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear(); \r\n        dispatch(eventLogout());\r\n        dispatch(logout()); \r\n    }\r\n}\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout\r\n})","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/UseForm';\r\nimport './login.css';\r\n\r\n const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n\r\n    const initialForm = {\r\n        name: '',\r\n        age: 0,\r\n        email: ''\r\n    };\r\n    \r\n    const [ formLoginValues, handleLoginInputChange ] = useForm( {\r\n        lEmail: 'oscar@email.com', \r\n        lpassword: '123456'\r\n    });\r\n\r\n    const {lEmail, lpassword} = formLoginValues; \r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm( {\r\n        rName: 'brenda',\r\n        rEmail: 'brenda@gmail.com', \r\n        rPassword1:'123456',\r\n        rPassword2: '123456'\r\n    });\r\n\r\n    const {rName, rEmail, rPassword1, rPassword2} = formRegisterValues; \r\n    \r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail, lpassword)); \r\n    }\r\n\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault(); \r\n\r\n        if(rPassword1 !== rPassword2){\r\n            return Swal.fire('Error', 'Las contrasenas deben ser iguales', 'error')\r\n        }\r\n\r\n\r\n        dispatch(startRegister(rEmail, rPassword1, rName)); \r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lpassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form\r\n                        onSubmit={handleRegister}\r\n                    >\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginScreen;","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nconst Navbar = () => {\r\n\r\n    const {name} = useSelector(state => state.auth); \r\n    const dispatch = useDispatch(); \r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span> \r\n\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={handleLogout}    \r\n            > \r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span>Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nconst CalendarEvent = ({event}) => {\r\n\r\n    const {title, user} = event; \r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <strong> - {user.name}</strong>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CalendarEvent\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n}); \r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n}); ","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {eventStartDelete } from '../../actions/events';\r\nimport { uiCloseModal } from '../../actions/ui';\r\n\r\nconst DeleteEventFab = () => {\r\n    const dispatch = useDispatch(); \r\n\r\n    const handleDelete = () => {\r\n            dispatch(eventStartDelete()); \r\n        \r\n        \r\n    }\r\n    return (\r\n        <button\r\n            className=\"btn btn-outline-danger btn-block\"\r\n            onClick={handleDelete}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar Evento</span>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default DeleteEventFab\r\n","import React, { useEffect, useState } from 'react'; \r\nimport moment from 'moment';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport { momentLocalizer } from 'react-big-calendar';\r\nimport Swal from 'sweetalert2'; \r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventAddNew, eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\nimport DeleteEventFab from '../ui/DeleteEventFab';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root'); \r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours'); \r\nconst endDate = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '', \r\n    notes: '', \r\n    start: now.toDate(), \r\n    end: endDate.toDate()\r\n}\r\n\r\nconst CalendarModal = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n\r\n    const {modalOpen} = useSelector(state => state.ui)\r\n    const {activeEvent} = useSelector(state => state.calendar)\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(endDate.toDate());\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    const [formValues, setFormValues] = useState(initEvent); \r\n\r\n    const { notes, title, start,end } = formValues; \r\n\r\n    useEffect(() => {\r\n        if(activeEvent){\r\n            setFormValues(activeEvent);\r\n        }else{\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [activeEvent, setFormValues]);\r\n\r\n\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setFormValues({\r\n            ...formValues, \r\n            [target.name] : target.value\r\n        })\r\n    }\r\n\r\n    const closeModal = () => {\r\n        //TODO: cerrar modal\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n        setFormValues(initEvent);\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e);\r\n\r\n        setFormValues({\r\n            ...formValues, \r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues, \r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const momentStart = moment(start); \r\n        const momentEnd = moment(end);\r\n\r\n        if(momentStart.isSameOrAfter(momentEnd)){\r\n            return Swal.fire('Error', 'La fecha fin debe ser mayor a fecha de inicio', \r\n            'error'); \r\n        }\r\n\r\n        if(title.trim().length < 2){\r\n            return setTitleValid(false); \r\n        }\r\n\r\n        //TODO: realizar grabacion en bd\r\n        if(activeEvent){\r\n            dispatch(eventStartUpdate(formValues)); \r\n        }else{\r\n            dispatch(eventStartAddNew(formValues)); \r\n        }\r\n\r\n\r\n        setTitleValid(true); \r\n\r\n        closeModal(); \r\n    }\r\n    return (\r\n        <Modal\r\n          isOpen={modalOpen}\r\n          onRequestClose={closeModal}\r\n          style={customStyles}\r\n          closeTimeoutMS={200}\r\n          className=\"modal\"\r\n          overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> {activeEvent ? 'Editar Evento' : 'Nuevo Evento'} </h1>\r\n            <hr />\r\n            <form \r\n                onSubmit={handleSubmitForm}\r\n                className=\"container\">\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={start}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={end}\r\n                        minDate={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        value={title}\r\n                        autoComplete=\"off\"\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n                { activeEvent  && <DeleteEventFab/>}\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default CalendarModal\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventClearActiveEvent } from '../../actions/events';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nconst AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () => {\r\n        dispatch(uiOpenModal()); \r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={handleClickNew}\r\n        >   \r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default AddNewFab; \r\n","import React, { useEffect, useState } from 'react';\r\nimport Navbar from '../ui/Navbar';\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport CalendarEvent from './CalendarEvent';\r\nimport CalendarModal from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport AddNewFab from '../ui/AddNewFab';\r\nimport DeleteEventFab from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {events, activeEvent} = useSelector(state => state.calendar); \r\n    const {uid} = useSelector(state => state.auth); \r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month'); \r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading()); \r\n    }, [dispatch]); \r\n\r\n    const onDoubleClickEvent = () => {\r\n        console.log('abrir modal');\r\n        \r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        //dispatch(eventClearActiveEvent());\r\n        dispatch(eventSetActive(e));\r\n        dispatch(uiOpenModal()); \r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e); \r\n    }\r\n\r\n    const onselectSlot = (e) => {\r\n        //console.log(e);\r\n\r\n        dispatch(eventClearActiveEvent()); \r\n    }\r\n    \r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n        //console.log(event, start,end,isSelected);\r\n\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367cf7' : '#465660', \r\n            borderRadius: '0px', \r\n            opacity: 0.8,\r\n            display: 'block', \r\n            color:'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    }; \r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar/>\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClickEvent}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                onSelectSlot={onselectSlot}\r\n                selectable={true}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab/>\r\n            \r\n            \r\n\r\n            <CalendarModal/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CalendarScreen\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({\r\n    isAuthenticated, \r\n    component: Component, \r\n    ...rest\r\n}) => {\r\n    \r\n    \r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                (isAuthenticated)\r\n                    ? <Component {...props} />\r\n                    : (<Redirect to=\"/login\"/>)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nexport default PrivateRoute\r\n\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired, \r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'; \r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nconst PublicRoute = ({\r\n    isAuthenticated, \r\n    component: Component, \r\n    ...rest\r\n}) => {\r\n\r\n        \r\n        return (\r\n            <Route {...rest}\r\n                component={ (props) => (\r\n                    (!isAuthenticated)\r\n                        ? <Component {...props} />\r\n                        : (<Redirect to=\"/\"/>)\r\n                )}\r\n            />\r\n        )\r\n    \r\n}\r\n\r\nexport default PublicRoute\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired, \r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from 'react'; \r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport LoginScreen from '../components/auth/LoginScreen';\r\nimport CalendarScreen from '../components/calendar/CalendarScreen';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport PublicRoute from './PublicRoute';\r\n\r\nconst AppRouter = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n\r\n    const {checking, uid} = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking()); \r\n    }, [dispatch]); \r\n\r\n    if(checking){\r\n        return (<h5>Espere...</h5>); \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Router>\r\n                <div>\r\n                    <Switch>\r\n                        <PublicRoute \r\n                            exact \r\n                            path=\"/login\" \r\n                            component={LoginScreen}\r\n                            isAuthenticated={!!uid}\r\n                        />\r\n                        <PrivateRoute \r\n                            exact \r\n                            path=\"/\" \r\n                            component={CalendarScreen}\r\n                            isAuthenticated={!!uid}    \r\n                        />\r\n\r\n                        <Redirect to=\"/\"/>\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AppRouter\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nconst inititalState = {\r\n    checking: true, \r\n    uid: null, \r\n    name: null\r\n}\r\n\r\nexport const authReducer = (state = inititalState, action) => {\r\n    switch (action.type) {\r\n\r\n        case types.authLogin: \r\n            return {\r\n                ...state, \r\n                ...action.payload, \r\n                checking:false\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return{\r\n                ...state, \r\n                checking:false\r\n            }\r\n        case types.authLogout: \r\n            return {\r\n                checking:false\r\n            }\r\n        default:\r\n           return state; \r\n    }\r\n}","import { types } from '../types/types';\r\n\r\n\r\n\r\nconst initialState = { \r\n    events: [], \r\n    activeEvent: null\r\n}; \r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            \r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        case types.eventAddNew: \r\n            return {\r\n                ...state, \r\n                events: [\r\n                    ...state.events, \r\n                    action.payload\r\n                ]\r\n            }\r\n        case types.eventClearActiveEvent: \r\n            return {\r\n                ...state, \r\n                activeEvent: null\r\n            }\r\n        case types.eventUpdated: \r\n            return {\r\n                ...state, \r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            }\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => ( e.id !== action.payload )\r\n                ),\r\n                activeEvent: null\r\n            }\r\n        case types.eventLoaded: \r\n            return {\r\n                ...state, \r\n                events: [ ...action.payload ]\r\n            }\r\n\r\n        case types.eventLogout: \r\n            return {\r\n                ...initialState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state, \r\n                modalOpen: true\r\n            }\r\n        case types.uiCloseModal: \r\n            return {\r\n                ...state, \r\n                modalOpen: false\r\n            }\r\n        default:\r\n           return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducers\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer, \r\n    auth:authReducer\r\n}); ","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer, \r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n); ","import React from 'react';\r\nimport {Provider} from 'react-redux'; \r\nimport AppRouter from './router/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nconst CalendarApp = () => {\r\n    return (\r\n        <Provider store ={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default CalendarApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CalendarApp from './CalendarApp';\nimport './styles.css'; \n\n// console.log(process.env.REACT_APP_API_URL);\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}